  
  plugin
  
  
  #local notification
  flutter_local_notifications: ^13.0.0

  #firebase core
  firebase_core: ^2.4.1

  #firebase messaging
  firebase_messaging: ^14.2.1
  
  
  
  
class DefaultFirebaseConfig
{
  static FirebaseOptions get platformOptions {
    if (Platform.isIOS) {
      return const FirebaseOptions(
        appId: '1:10277790271:ios:0cb237d64889aaee0aa70a',
        apiKey: 'AIzaSyDpIe-57Qpg-Ffk6rPt-m_uvoP8kK_ZMw',
        projectId: 'ac-serce-9eae0',
        messagingSenderId: '10271790271',
        iosBundleId: 'com.acservice',
      );
    } else {
      // Android
      return const FirebaseOptions(
        appId: '1:10277717271:android:3ed006d71c125a820aa70a',
        apiKey: 'AIzaSyCRyQgzQ1cK1jos8TE4Bi-XyJnOnKTEg',
        projectId: 'ac-servi-9eae0',
        messagingSenderId: '10271790271',
      );
    }
  }
}




main file


final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin=FlutterLocalNotificationsPlugin();
AndroidNotificationChannel channel =const AndroidNotificationChannel('channel', 'this is app notification',playSound: true);

void _initializeLocalNotification() {
  var iosInitializationSettings = const DarwinInitializationSettings(requestAlertPermission: true,requestBadgePermission: true,requestSoundPermission: true);
  const AndroidInitializationSettings initializationSettingsAndroid = AndroidInitializationSettings('@mipmap/ic_launcher');

  var initSettings = InitializationSettings(
      android: initializationSettingsAndroid,
      iOS: iosInitializationSettings);

  flutterLocalNotificationsPlugin.initialize(initSettings,onDidReceiveNotificationResponse:onDidReceiveLocalNotification,onDidReceiveBackgroundNotificationResponse:onDidReceiveBackgroundNotificationResponse);

}


void onDidReceiveLocalNotification(NotificationResponse details) {

  Utils.showLog(details.payload.toString());

}

void onDidReceiveBackgroundNotificationResponse(NotificationResponse details) {
  Utils.showLog(details.payload.toString());

}



@pragma('vm:entry-point')
Future<void> _firebaseMessagingBackgroundHandler(RemoteMessage message) async {

  showNotification(message);
}

showNotification(RemoteMessage message) async {

  if(message!=null)
  {

    Utils.showLog(message.data!=null ? json.encode(message.data) : "");

    RemoteNotification? notification = message.notification;

    String title = "";
    String desc = "";

    if(Platform.isIOS)
    {
      title = notification!.title.toString();
      desc = notification!.body.toString();
    }else
    {
      title = message.data.containsKey('title') ? message.data['title'] : "";
      desc = message.data.containsKey('body') ? message.data['body'] : "";
    }

    flutterLocalNotificationsPlugin.show(notification.hashCode, title, desc, payload : json.encode(message.data), NotificationDetails(android: AndroidNotificationDetails(channel.id,channel.name,color: Colors.blue,playSound: true,icon: '@mipmap/ic_launcher')));

  }

}


Future<void> main() async {
  await GetStorage.init();
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(options: DefaultFirebaseConfig.platformOptions);
  runApp(const MyApp());

  _initializeLocalNotification();

  FirebaseMessaging.instance.getInitialMessage();

  FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);

  FirebaseMessaging.onMessage.listen((RemoteMessage message) async {
    showNotification(message);
  });
}

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  State<MyApp> createState() => _MyAppState();

  static _MyAppState? of(BuildContext context) => context.findAncestorStateOfType<_MyAppState>();

}

class _MyAppState extends State<MyApp> {


  @override
  void initState() {
    super.initState();
  }

  @override
  Widget build(BuildContext context) {

    SystemChrome.setSystemUIOverlayStyle(SystemUiOverlayStyle(statusBarColor: Utils.getColor (ColorCode.blue)));
    SystemChrome.setPreferredOrientations([DeviceOrientation.portraitUp,]);
    SystemChrome.setPreferredOrientations([DeviceOrientation.portraitUp]);

    return ScreenUtilInit(
      designSize: const Size(360, 690),
      minTextAdapt: true,
      splitScreenMode: true,
      builder: (context , child) {
        return GetMaterialApp(
          debugShowCheckedModeBanner: false,
          enableLog: true,
          navigatorKey: NavigationService.navigatorKey,
          //locale: const Locale('en','US'),
          translations: TranslationService(),
          getPages: [
            GetPage(name: RouteInfo.splashscreen, page: ()=> SplashScreen(), binding: SplashBinding()),

          ],
          initialRoute: RouteInfo.splashscreen,
        );
      },
      child: SplashScreen(),
    );
  }
}

class NavigationService {
  static GlobalKey<NavigatorState> navigatorKey =
  GlobalKey<NavigatorState>();
}


=====================================================================================================================================
Other Example:

import 'dart:io';

import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';




final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
FlutterLocalNotificationsPlugin();

AndroidNotificationChannel channel1 =AndroidNotificationChannel('channel1', 'this is app notification', importance: Importance.high,
    playSound: true);
AndroidNotificationChannel notificationNoSound =AndroidNotificationChannel('channel2', 'this is app notification', importance: Importance.high,
    playSound: true);
AndroidNotificationChannel notificationSound1 =AndroidNotificationChannel('channel3', 'this is app notification', importance: Importance.high,
    playSound: true);
AndroidNotificationChannel notificationSound2 =AndroidNotificationChannel('channel4', 'this is app notification', importance: Importance.high,
    playSound: true);
AndroidNotificationChannel notificationSound3 =AndroidNotificationChannel('channel5', 'this is app notification', importance: Importance.high,
    playSound: true);
AndroidNotificationChannel notificationSound4 =AndroidNotificationChannel('channel6', 'this is app notification', importance: Importance.high,
    playSound: true);


void initializeLocalNotification() {
  var iosInitializationSettings = new IOSInitializationSettings();
  var androidInitializationSettings =
  AndroidInitializationSettings('@mipmap/ic_launcher');
  flutterLocalNotificationsPlugin.initialize(InitializationSettings(iOS: iosInitializationSettings,android: androidInitializationSettings),);
}



Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();
  SystemChrome.setPreferredOrientations(
          [DeviceOrientation.portraitUp, DeviceOrientation.portraitDown])
      .then((_) async {
    await Firebase.initializeApp();
    initializeLocalNotification();





    //app background NOTIFICATION CLICK Call method
    FirebaseMessaging.instance.getInitialMessage().then((message) async {
      // print("onMessage Instance: ${message!.data}");
      debugPrint('onMessage Instance');
      debugPrint(message.toString());

      if (message != null) {
        if (message.data != null) {





          Map<String, dynamic> data =
          new Map<String, dynamic>.from(message.data);


          if (data["notification_type"] == "demo1") {
            Navigator.of(GlobalVariable.navState.currentContext!).pushReplacement(
                MaterialPageRoute(
                    builder: (context) =>
                        AdminPage()));
          }
          else if (data["notification_type"] == "demo2") {
            Navigator.of(GlobalVariable.navState.currentContext!).pushReplacement(
                MaterialPageRoute(
                    builder: (context) =>
                        DashBoardPage()));
          }
         

          // Navigator.of(context).push(MaterialPageRoute(builder: (context) => AdminPage()));
        }
      }
    });


    //App Open Click Notification call this method
    FirebaseMessaging.onMessageOpenedApp.listen((RemoteMessage message) {
      //print("onMessageOpenedApp: ${message.data}");

      debugPrint('onMessageOpenedApp');
      debugPrint("App open Notification receive--- "+message.toString());




      if (message != null) {
        if (message.data != null) {
          Map<String, dynamic> data =
          new Map<String, dynamic>.from(message.data);
          //navigateToPage(data);

          //Navigator.of(context).push(MaterialPageRoute(builder: (context) => AdminPage()));


          if (data["notification_type"] == "demo1") {
            Navigator.of(GlobalVariable.navState.currentContext!).pushReplacement(
                MaterialPageRoute(
                    builder: (context) =>
                        AdminPage()));
          }
          else if (data["notification_type"] == "demo2") {
            Navigator.of(GlobalVariable.navState.currentContext!).pushReplacement(
                MaterialPageRoute(
                    builder: (context) =>
                        DashBoardPage()));
          }
          

        }
      }
    });


    //background notification sound set below method
    FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);



    FirebaseMessaging.onMessage.listen((RemoteMessage message) async {




      debugPrint('onMessage: ${message.data}');
      debugPrint('onMessage');
      debugPrint(message.toString());

      //Show Local Notification code
      if(message.notification!=null)
      {

        debugPrint("For ground notification view--------- ");

        showNotification(message);
      }


    });


    initFCM();



    runApp(new MyApp());
  });
}

class MyApp extends StatelessWidget {
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    SystemChrome.setSystemUIOverlayStyle(SystemUiOverlayStyle(
        statusBarColor: getColorFromHex(ColorCode.Color_mildBlue)));
    return MaterialApp(
      title: 'Flutter Demo',
      navigatorKey: GlobalVariable.navState,
      debugShowCheckedModeBanner: false,
      home: SplashScreen(),
    );
  }
}


class GlobalVariable {

  /// This global key is used in material app for navigation through firebase notifications.
  /// [navState] usage can be found in [notification_notifier.dart] file.
  static final GlobalKey<NavigatorState> navState = GlobalKey<NavigatorState>();
}

//channel create
const AndroidNotificationChannel channel =AndroidNotificationChannel(
    'High_importance_channel',
    'High_importance_notification',
    importance: Importance.high,
    playSound: true);


void initFCM() {
  FirebaseMessaging _firebaseMessaging = FirebaseMessaging.instance;

  // For iOS request permission first.
  if (Platform.isIOS) {
    FirebaseMessaging.instance.requestPermission();

    _firebaseMessaging.getToken().then((token) async {
      assert(token != null);
      debugPrint("Push Messaging token: $token");

      SharedPreferences prefs = await SharedPreferences.getInstance();
      prefs.setString(constantKey.fcmToken, token!);
    });
  }

  _firebaseMessaging.getToken().then((token) async {
    assert(token != null);

    /*   setState(() {
        _homeScreenText = "Push Messaging token: $token";
      });
      print(_homeScreenText);*/

    debugPrint("Push Messaging token: $token");

    SharedPreferences prefs = await SharedPreferences.getInstance();
    prefs.setString(constantKey.fcmToken, token!);
  });


}



showNotification(RemoteMessage message)
async {

  SharedPreferences prefs = await SharedPreferences.getInstance();

  if(message.notification!=null) {

   /* if (message.notification!.title == "Emergency") {
      flutterLocalNotificationsPlugin.show(
          message.notification.hashCode, message.notification!.title,
          message.notification!.body, NotificationDetails(
        android: AndroidNotificationDetails(
            channel1.id, channel1.name, color: Colors.blue,
            playSound: true,
            sound: RawResourceAndroidNotificationSound("ramp"),
            icon: '@mipmap/ic_launcher'),
        iOS: IOSNotificationDetails(sound: 'ramp.wav'),
      ));
    }
    else {

      if( prefs.containsKey(constantKey.notification_sound_1) && prefs.getBool(constantKey.notification_sound_1)==true)
        {
          flutterLocalNotificationsPlugin.show(
              message.notification.hashCode, message.notification!.title,
              message.notification!.body, NotificationDetails(
            android: AndroidNotificationDetails(
                notificationSound1.id, notificationSound1.name, color: Colors.blue,
                playSound: true,
                sound: RawResourceAndroidNotificationSound("happy_bells_notification"),
                icon: '@mipmap/ic_launcher'),
            iOS: IOSNotificationDetails(sound: 'happy_bells_notification.wav'),
          ));
        }
      else {
        flutterLocalNotificationsPlugin.show(
            message.notification.hashCode, message.notification!.title,
            message.notification!.body, NotificationDetails(
          android: AndroidNotificationDetails(
              notificationNoSound.id, notificationNoSound.name,
              color: Colors.blue,
              playSound: true,
              icon: '@mipmap/ic_launcher'),
        ));
      }

    }*/

    if( prefs.containsKey(constantKey.notification_sound_1) && prefs.getBool(constantKey.notification_sound_1)==true)
    {
      flutterLocalNotificationsPlugin.show(
          message.notification.hashCode, message.notification!.title,
          message.notification!.body, NotificationDetails(
        android: AndroidNotificationDetails(
            notificationSound1.id, notificationSound1.name, color: Colors.blue,
            playSound: true,
            sound: RawResourceAndroidNotificationSound("happy_bells_notification"),
            icon: '@mipmap/ic_launcher'),
        iOS: IOSNotificationDetails(sound: 'happy_bells_notification.wav'),
      ));
    }
    else if( prefs.containsKey(constantKey.notification_sound_2) && prefs.getBool(constantKey.notification_sound_2)==true)
    {
      flutterLocalNotificationsPlugin.show(
          message.notification.hashCode, message.notification!.title,
          message.notification!.body, NotificationDetails(
        android: AndroidNotificationDetails(
            notificationSound2.id, notificationSound2.name, color: Colors.blue,
            playSound: true,
            sound: RawResourceAndroidNotificationSound("bell_notification"),
            icon: '@mipmap/ic_launcher'),
        iOS: IOSNotificationDetails(sound: 'bell_notification.wav'),
      ));
    }
    else if( prefs.containsKey(constantKey.notification_sound_3) && prefs.getBool(constantKey.notification_sound_3)==true)
    {
      flutterLocalNotificationsPlugin.show(
          message.notification.hashCode, message.notification!.title,
          message.notification!.body, NotificationDetails(
        android: AndroidNotificationDetails(
            notificationSound3.id, notificationSound3.name, color: Colors.blue,
            playSound: true,
            sound: RawResourceAndroidNotificationSound("musical_alert"),
            icon: '@mipmap/ic_launcher'),
        iOS: IOSNotificationDetails(sound: 'musical_alert.wav'),
      ));
    }
    else if( prefs.containsKey(constantKey.notification_sound_4) && prefs.getBool(constantKey.notification_sound_4)==true)
    {
      flutterLocalNotificationsPlugin.show(
          message.notification.hashCode, message.notification!.title,
          message.notification!.body, NotificationDetails(
        android: AndroidNotificationDetails(
            notificationSound4.id, notificationSound4.name, color: Colors.blue,
            playSound: true,
            sound: RawResourceAndroidNotificationSound("musical_reveal"),
            icon: '@mipmap/ic_launcher'),
        iOS: IOSNotificationDetails(sound: 'musical_reveal.wav'),
      ));
    }
    else {
      flutterLocalNotificationsPlugin.show(
          message.notification.hashCode, message.notification!.title,
          message.notification!.body, NotificationDetails(
        android: AndroidNotificationDetails(
            notificationNoSound.id, notificationNoSound.name,
            color: Colors.blue,
            playSound: true,
            icon: '@mipmap/ic_launcher'),
      ));
    }

  }
}



Future<void> _firebaseMessagingBackgroundHandler(RemoteMessage message) async {


  debugPrint("App Background Notification receive--- "+message.toString());

  showNotification(message);



}



